SPI
1.全称
Service Provider Interface，是Java提供的一套用来被第三方实现或者扩展的API，可以用来启用框架扩展和替换组件，它的核心类是java.util.ServiceLoader。
SPI机制的核心是解耦合，通过SPI机制，将实现类隐藏在接口后面，根据需要寻找服务实现。
Effective Java中提到，SPI是一种将服务接口与服务实现分离以达到解耦、大大提升程序可扩展性的机制。引入服务提供者就是引入的SPI接口的实现者，通过本地的注册发现获取到具体的实现类，轻松可插拔。
2.场景
接口想在运行时才发现具体的实现类
3.调用机制
服务使用者  ------>  服务提供者
通过jar包导入形式将提供者引入，并使用JDK的核心api java.util.ServiceLoader来调用
4.使用规范步骤
（1）服务提供者定义对外接口及方法；比如数据库驱动会提供一个java.sql.Driver的接口。
（2）针对定义的接口，提供一个实现类。
（3）在项目或jar包的META-INF/services目录下，创建一个文本文件：名称为接口的“全限定名”，内容为实现类的全限定名。
（4）服务调用者引入该项目的jar包，并将其放置于classpath下。
（5）服务调用者通过核心API java.util.ServiceLoader来动态加载该实现，主要就是扫描classpath下所有jar包内META-INF/services目录下，按照指定格式定义的文件，并把其中类进行加载。
（6）由于SPI机制使用的过程中无法进行传递构造参数，因此需提供一个无参的构造方法。
5.demo见zhw.SPI